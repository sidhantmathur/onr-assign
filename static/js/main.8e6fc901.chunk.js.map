{"version":3,"sources":["components/charts/LineChart.js","components/charts/PieChart.js","components/charts/PieContainer.js","components/layouts/Stats.js","components/icons/coffee.js","components/icons/anchor.js","components/navbars/Navbar.js","components/navbars/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["LineChart","props","data","selectedData","dataset","score","useState","name","dataname","console","log","svgRef","useRef","useEffect","svg","select","current","xScale","scaleLinear","domain","length","range","yScale","xAxis","axisBottom","ticks","tickFormat","index","style","call","myArea","area","x","value","y0","y","curve","curveCardinal","selectAll","join","attr","overflow","marginTop","ref","className","PieChart","arcGenerator","arc","innerRadius","outerRadius","pie","d","sort","pieGenerator","colorScale","scaleOrdinal","schemeBlues","i","transition","attrTween","nextInstruction","interpolator","interpolate","this","lastInstruction","t","position","display","justifyContent","PieContainer","preData","setSelectedData","arrayPre","remainder","sample","vsly","push","onClick","onButtonClick","color","Stats","qualityGauge","gaugeData","basicsGauge","interactionGauge","expertiseGauge","processGauge","knowledgeGauge","areaData","qs","Coffee","coffeeIcon","icon","faCoffee","paddingLeft","paddingRight","Anchor","anchorIcon","faAnchor","Navbar","Sidebar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e6fc901.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport { select,\n  area,\n  curveCardinal,\n  axisBottom,\n  scaleLinear } from 'd3';\n\nimport './LineChart.css'\n\nexport default function LineChart(props) {\n\n  const { data, selectedData } = props\n\n  const dataset = [ data[selectedData][0].score, data[selectedData][1].score, data[selectedData][2].score, data[selectedData][3].score ]\n  const [dataname, setDataName] = useState(dataset.name)\n\n  console.log(data, dataset, dataname)\n\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    // let initCheck = data[\"Quality Score\"].map(d => d.date)\n\n    // console.log(initCheck)\n\n    const xScale = scaleLinear()\n      // .domain(data[\"Quality Score\"].map(d => d.date))\n      .domain([0, dataset.length - 1])\n      .range([0, 600]);\n\n    const yScale = scaleLinear()\n      .domain([0, 100])\n      .range([100, 0]);\n\n    const xAxis = axisBottom(xScale)\n      .ticks(dataset.length)\n      .tickFormat(index => index + 1);\n    svg\n      .select(\".x-axis\")\n      .style(\"transform\", \"translateY(150px)\")\n      .call(xAxis);\n      \n    const myArea = area()\n      .x((value, index) => xScale(index))\n      .y0(0)\n      .y(yScale)\n      .curve(curveCardinal);\n\n    svg\n      .selectAll(\".area\")\n      .data([dataset])\n      .join(\"path\")\n      .attr(\"class\", \"area\")\n      .attr(\"d\", myArea)\n      .attr(\"fill\", \"lightblue\")\n      .attr(\"stroke\", \"lightblue\");\n\n  }, [dataset]);\n\n  return (\n    <>\n    <div>\n\n      <p>{selectedData}</p>\n\n      <svg style={{overflow: 'visible', marginTop: '20px'}} ref={svgRef}>\n        <g className=\"x-axis\" />\n      </svg>\n      \n    </div>\n    </>\n  )\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { arc, interpolate, pie, scaleOrdinal, schemeBlues, select } from \"d3\";\nimport './Pie.css'\n\nfunction PieChart({ data }) {\n\n  // console.log(data)\n\n  const svgRef = useRef();\n\n  const height = 50\n  const width = 50\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const arcGenerator = arc()\n      .innerRadius(45)\n      .outerRadius(50);\n\n    const pieGenerator = pie()\n      .value(d => d.score)\n      .sort(null); \n\n    const dataset = pieGenerator(data);\n\n    const colorScale = scaleOrdinal(schemeBlues[3]);\n\n    svg\n      .selectAll(\".slice\")\n      .data(dataset)\n      .join(\"path\")\n      .attr(\"class\", \"slice\")\n      .attr(\"fill\", (d, i) => colorScale(i))\n      .style(\n        \"transform\",\n        `translate(${width}px, ${height}px)`\n      )\n      .transition()\n      .attrTween(\"d\", function(nextInstruction) {\n        const interpolator = interpolate(this.lastInstruction, nextInstruction);\n        this.lastInstruction = interpolator(1);\n        return function(t) {\n          return arcGenerator(interpolator(t));\n        };\n      });\n  }, [data]);\n\n  return (\n    <div style={{position: 'relative', display: 'flex', justifyContent: 'center'}}>\n      <p style={{ position: 'absolute', marginTop: '40px' }}>{data[0].score}%</p>\n      <svg ref={svgRef}>\n      </svg>\n    </div>\n  );\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport PieChart from './PieChart'\nimport './Pie.css'\n\nfunction PieContainer({ preData, setSelectedData }) {\n  \n  const arrayPre = [preData]\n  const remainderSub = preData.score\n  const remainder = {\n    name: \"remainder\",\n    sample: 133,\n    score: 100 - remainderSub,\n    vsly: null\n  }\n  arrayPre.push(remainder)\n\n  const data = arrayPre\n  \n  const onButtonClick = (data) => {\n    setSelectedData(data)\n    console.log(data);\n  }\n\n  return (\n    <div className=\"gbox\" onClick={() => onButtonClick(data[0].name)}>\n      <p>{data[0].name}</p>\n        <PieChart data={data} />\n      <p style={{color: 'black'}}>Sample: {data[0].sample}</p>\n      {/* <button onClick={() => onButtonClick(data[0].name)}>{data[0].name}</button> */}\n    </div>\n  );\n}\n\nexport default PieContainer;\n","import React, { useState } from 'react'\n\nimport './Stats.css'\n\nimport dataset from '../data/data.json'\nimport LineChart from '../charts/LineChart'\n\nimport PieContainer from '../charts/PieContainer'\n\nexport default function Stats() {\n\n  const qualityGauge = dataset.gaugeData[0]\n  const basicsGauge = dataset.gaugeData[1]\n  const interactionGauge = dataset.gaugeData[2]\n  const expertiseGauge = dataset.gaugeData[3]\n  const processGauge = dataset.gaugeData[4]\n  const knowledgeGauge = dataset.gaugeData[5]\n\n  const areaData = dataset.areaData\n\n  const qs = areaData[\"Quality Score\"]\n  // const ba = areaData[\"Basics\"]\n  // const ex = areaData[\"Expertise\"]\n  // const it = areaData[\"Interaction\"]\n  // const kn = areaData[\"Knowledge\"]\n  // const pr = areaData[\"Process\"]\n\n  const [selectedData, setSelectedData] = useState(qs)\n\n  console.log(areaData[selectedData])\n\n  return (\n    <>\n    <div className='stats-layout'>\n      <div className=\"col-1\">\n        <div className=\"filters\">\n          <h1>Performance Management</h1>\n            <p>Filters</p>\n            <div className=\"filter-box\">\n              <div><div className=\"blueBox\"></div>All CQA Results</div>\n              <div><div className=\"greyBox\"></div>CQAs with Closed Loop</div>\n            </div>\n        </div>\n        <div className='donut-list'>\n          <PieContainer setSelectedData={setSelectedData} selectedData={selectedData} preData={qualityGauge}/>\n          <PieContainer setSelectedData={setSelectedData} selectedData={selectedData} preData={basicsGauge}/>\n          <PieContainer setSelectedData={setSelectedData} selectedData={selectedData} preData={interactionGauge}/>\n          <PieContainer setSelectedData={setSelectedData} selectedData={selectedData} preData={expertiseGauge}/>\n          <PieContainer setSelectedData={setSelectedData} selectedData={selectedData} preData={processGauge}/>\n          <PieContainer setSelectedData={setSelectedData} selectedData={selectedData} preData={knowledgeGauge}/>\n        </div>\n      </div>\n\n      <div className=\"col-2\">\n        <div className='quality-score'>\n            <div>\n              <button className='btn'>Day</button>\n              <button className='btn'>Week</button>\n              <button className='btn'>Month</button>\n              <button className='btn'>Quarter</button>\n              <button className='btn'>Half</button>\n              <button className='btn'>Year</button>\n            </div>\n          <div>\n              { areaData[selectedData] ? \n                <LineChart \n                data={areaData}\n                selectedData={selectedData}\n                qs={qs}\n              /> : 'Click a Donut'\n              }\n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n  )\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Coffee() {\n  const coffeeIcon = <FontAwesomeIcon icon={faCoffee} />\n  return (\n    <div style={{paddingLeft:'5px', paddingRight:'5px'}}>\n      {coffeeIcon}\n    </div>\n  )\n}\n\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAnchor } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Anchor() {\n  const anchorIcon = <FontAwesomeIcon icon={faAnchor} />\n  return (\n    <div style={{paddingLeft:'5px', paddingRight:'5px'}}>\n      {anchorIcon}\n    </div>\n  )\n}\n\n","import React from 'react';\nimport './Navbar.css';\n\nimport Coffee from '../icons/coffee'\nimport Anchor from '../icons/anchor'\n\nexport default function Navbar() {\n  return (\n    <div className='navbar'>\n      <div className='brand'>Diagnostic Tool</div>\n      <div className='navInfo'>\n        <div>\n          Logged in as General User \n        </div>\n        <div style={{paddingLeft:'10px', paddingRight:'5px'}}>\n          |\n        </div>\n        <div> \n          <Coffee /> \n        </div>\n        <div> \n          <Anchor /> \n        </div>\n        <div> \n          <Coffee /> \n        </div>\n        <div> \n          <Anchor /> \n        </div>\n        <div> \n          <Coffee />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Sidebar.css'\n\nimport Coffee from '../icons/coffee'\nimport Anchor from '../icons/anchor'\n\nexport default function Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <div><Coffee /></div>\n      <div><Anchor /></div>\n      <div><Coffee /></div>\n      <div><Anchor /></div>\n      <div><Coffee /></div>\n    </div>\n  )\n}\n","// import logo from './logo.svg';\nimport './App.css';\n\nimport Stats from './components/layouts/Stats';\nimport Navbar from './components/navbars/Navbar'\nimport Sidebar from './components/navbars/Sidebar'\n\nfunction App() {\n  return (\n    <div className='app'>\n      <div className='layout'>\n        <div className='Sidebar'>\n          <Sidebar />\n        </div>\n        <div className='Navbar'>\n          <Navbar />\n        </div>\n        <div className=\"Spacer\"></div>\n        {/* <div className='Header'>\n          <Header />\n        </div> */}\n        <div className='Stats'>\n          <Stats />\n        </div>\n        <div className=\"Spacer2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}